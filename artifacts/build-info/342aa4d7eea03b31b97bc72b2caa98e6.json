{
	"id": "342aa4d7eea03b31b97bc72b2caa98e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"timelock.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.2;\r\ncontract TimeLock{\r\n     mapping (address => uint) balances;\r\n     mapping (address => uint) locktime;\r\n\r\n     function deposit() public payable {\r\n        balances[msg.sender] += msg.value;\r\n        locktime[msg.sender] += now + 1 weeks;\r\n     }\r\n\r\n     function increaseLockTime(uint _seconds) public {\r\n        locktime[msg.sender] += _seconds;\r\n     }\r\n\r\n     function withdraw() public {\r\n        require(balances[msg.sender] > 0);\r\n        require(now > locktime[msg.sender]);\r\n        balances[msg.sender] = 0;\r\n        msg.sender.transfer(this.balance);\r\n     }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"timelock.sol": {
				"TimeLock": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_seconds",
									"type": "uint256"
								}
							],
							"name": "increaseLockTime",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"timelock.sol\":58:630  contract TimeLock{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"timelock.sol\":58:630  contract TimeLock{\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"timelock.sol\":58:630  contract TimeLock{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x79af55e4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"timelock.sol\":422:627  function withdraw() public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"timelock.sol\":422:627  function withdraw() public {\r... */\n      pop\n      tag_6\n      jump(tag_7)\n    tag_6:\n      stop\n        /* \"timelock.sol\":313:413  function increaseLockTime(uint _seconds) public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"timelock.sol\":313:413  function increaseLockTime(uint _seconds) public {\r... */\n      pop\n      tag_9\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_10)\n    tag_9:\n      stop\n        /* \"timelock.sol\":169:304  function deposit() public payable {\r... */\n    tag_4:\n      tag_11\n      jump(tag_12)\n    tag_11:\n      stop\n        /* \"timelock.sol\":422:627  function withdraw() public {\r... */\n    tag_7:\n        /* \"timelock.sol\":491:492  0 */\n      0x0\n        /* \"timelock.sol\":468:476  balances */\n      dup1\n        /* \"timelock.sol\":468:488  balances[msg.sender] */\n      0x0\n        /* \"timelock.sol\":477:487  msg.sender */\n      caller\n        /* \"timelock.sol\":468:488  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"timelock.sol\":468:492  balances[msg.sender] > 0 */\n      gt\n        /* \"timelock.sol\":460:493  require(balances[msg.sender] > 0) */\n      iszero\n      iszero\n      tag_14\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_14:\n        /* \"timelock.sol\":518:526  locktime */\n      0x1\n        /* \"timelock.sol\":518:538  locktime[msg.sender] */\n      0x0\n        /* \"timelock.sol\":527:537  msg.sender */\n      caller\n        /* \"timelock.sol\":518:538  locktime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"timelock.sol\":512:515  now */\n      timestamp\n        /* \"timelock.sol\":512:538  now > locktime[msg.sender] */\n      gt\n        /* \"timelock.sol\":504:539  require(now > locktime[msg.sender]) */\n      iszero\n      iszero\n      tag_15\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_15:\n        /* \"timelock.sol\":573:574  0 */\n      0x0\n        /* \"timelock.sol\":550:558  balances */\n      dup1\n        /* \"timelock.sol\":550:570  balances[msg.sender] */\n      0x0\n        /* \"timelock.sol\":559:569  msg.sender */\n      caller\n        /* \"timelock.sol\":550:570  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"timelock.sol\":550:574  balances[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"timelock.sol\":585:595  msg.sender */\n      caller\n        /* \"timelock.sol\":585:604  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"timelock.sol\":585:618  msg.sender.transfer(this.balance) */\n      0x8fc\n        /* \"timelock.sol\":605:609  this */\n      address\n        /* \"timelock.sol\":605:617  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"timelock.sol\":585:618  msg.sender.transfer(this.balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"timelock.sol\":585:618  msg.sender.transfer(this.balance) */\n      pop\n        /* \"timelock.sol\":422:627  function withdraw() public {\r... */\n      jump\t// out\n        /* \"timelock.sol\":313:413  function increaseLockTime(uint _seconds) public {\r... */\n    tag_10:\n        /* \"timelock.sol\":396:404  _seconds */\n      dup1\n        /* \"timelock.sol\":372:380  locktime */\n      0x1\n        /* \"timelock.sol\":372:392  locktime[msg.sender] */\n      0x0\n        /* \"timelock.sol\":381:391  msg.sender */\n      caller\n        /* \"timelock.sol\":372:392  locktime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"timelock.sol\":372:404  locktime[msg.sender] += _seconds */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"timelock.sol\":313:413  function increaseLockTime(uint _seconds) public {\r... */\n      pop\n      jump\t// out\n        /* \"timelock.sol\":169:304  function deposit() public payable {\r... */\n    tag_12:\n        /* \"timelock.sol\":238:247  msg.value */\n      callvalue\n        /* \"timelock.sol\":214:222  balances */\n      0x0\n        /* \"timelock.sol\":214:234  balances[msg.sender] */\n      dup1\n        /* \"timelock.sol\":223:233  msg.sender */\n      caller\n        /* \"timelock.sol\":214:234  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"timelock.sol\":214:247  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"timelock.sol\":288:295  1 weeks */\n      0x93a80\n        /* \"timelock.sol\":282:285  now */\n      timestamp\n        /* \"timelock.sol\":282:295  now + 1 weeks */\n      add\n        /* \"timelock.sol\":258:266  locktime */\n      0x1\n        /* \"timelock.sol\":258:278  locktime[msg.sender] */\n      0x0\n        /* \"timelock.sol\":267:277  msg.sender */\n      caller\n        /* \"timelock.sol\":258:278  locktime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"timelock.sol\":258:295  locktime[msg.sender] += now + 1 weeks */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"timelock.sol\":169:304  function deposit() public payable {\r... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820ed0abf0c598efabe3215b6e6cbb22b1cb82224785e41d69f6e1f1a8234a1e8290029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610304806100206000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633ccfd60b1461005c57806379af55e414610073578063d0e30db0146100a0575b600080fd5b34801561006857600080fd5b506100716100aa565b005b34801561007f57600080fd5b5061009e600480360381019080803590602001909291905050506101e8565b005b6100a8610238565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115156100f757600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544211151561014457600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156101e5573d6000803e3d6000fd5b50565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555062093a804201600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505600a165627a7a72305820ed0abf0c598efabe3215b6e6cbb22b1cb82224785e41d69f6e1f1a8234a1e8290029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x79AF55E4 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xA0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0xAA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH2 0x238 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP GT ISZERO ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 TIMESTAMP ADD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xed EXP 0xbf 0xc MSIZE DUP15 STATICCALL 0xbe ORIGIN ISZERO 0xb6 0xe6 0xcb 0xb2 0x2b SHR 0xb8 0x22 0x24 PUSH25 0x5E41D69F6E1F1A8234A1E82900290000000000000000000000 ",
							"sourceMap": "58:572:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;58:572:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633ccfd60b1461005c57806379af55e414610073578063d0e30db0146100a0575b600080fd5b34801561006857600080fd5b506100716100aa565b005b34801561007f57600080fd5b5061009e600480360381019080803590602001909291905050506101e8565b005b6100a8610238565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115156100f757600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544211151561014457600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156101e5573d6000803e3d6000fd5b50565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555062093a804201600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505600a165627a7a72305820ed0abf0c598efabe3215b6e6cbb22b1cb82224785e41d69f6e1f1a8234a1e8290029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x79AF55E4 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xA0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0xAA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH2 0x238 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP GT ISZERO ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 TIMESTAMP ADD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xed EXP 0xbf 0xc MSIZE DUP15 STATICCALL 0xbe ORIGIN ISZERO 0xb6 0xe6 0xcb 0xb2 0x2b SHR 0xb8 0x22 0x24 PUSH25 0x5E41D69F6E1F1A8234A1E82900290000000000000000000000 ",
							"sourceMap": "58:572:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;422:205;;8:9:-1;5:2;;;30:1;27;20:12;5:2;422:205:0;;;;;;313:100;;8:9:-1;5:2;;;30:1;27;20:12;5:2;313:100:0;;;;;;;;;;;;;;;;;;;;;;;;;;169:135;;;;;;422:205;491:1;468:8;:20;477:10;468:20;;;;;;;;;;;;;;;;:24;460:33;;;;;;;;518:8;:20;527:10;518:20;;;;;;;;;;;;;;;;512:3;:26;504:35;;;;;;;;573:1;550:8;:20;559:10;550:20;;;;;;;;;;;;;;;:24;;;;585:10;:19;;:33;605:4;:12;;;585:33;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;585:33:0;422:205::o;313:100::-;396:8;372;:20;381:10;372:20;;;;;;;;;;;;;;;;:32;;;;;;;;;;;313:100;:::o;169:135::-;238:9;214:8;:20;223:10;214:20;;;;;;;;;;;;;;;;:33;;;;;;;;;;;288:7;282:3;:13;258:8;:20;267:10;258:20;;;;;;;;;;;;;;;;:37;;;;;;;;;;;169:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "154400",
								"executionCost": "202",
								"totalCost": "154602"
							},
							"external": {
								"deposit()": "40801",
								"increaseLockTime(uint256)": "20535",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "MSTORE"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "CODECOPY"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820ed0abf0c598efabe3215b6e6cbb22b1cb82224785e41d69f6e1f1a8234a1e8290029",
									".code": [
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "LT"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "DIV"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "AND"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"value": "79AF55E4"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"value": "D0E30DB0"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "REVERT"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "JUMPDEST"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "POP"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "JUMP"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "JUMPDEST"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "STOP"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "POP"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "DUP1"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "SUB"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "DUP2"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "ADD"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "DUP1"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "DUP1"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "ADD"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "SWAP3"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "SWAP2"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "POP"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "POP"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "POP"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "JUMP"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "STOP"
										},
										{
											"begin": 169,
											"end": 304,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 169,
											"end": 304,
											"name": "JUMPDEST"
										},
										{
											"begin": 169,
											"end": 304,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 169,
											"end": 304,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 169,
											"end": 304,
											"name": "JUMP"
										},
										{
											"begin": 169,
											"end": 304,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 169,
											"end": 304,
											"name": "JUMPDEST"
										},
										{
											"begin": 169,
											"end": 304,
											"name": "STOP"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "JUMPDEST"
										},
										{
											"begin": 491,
											"end": 492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 468,
											"end": 476,
											"name": "DUP1"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 477,
											"end": 487,
											"name": "CALLER"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "AND"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "AND"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "DUP2"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "MSTORE"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "ADD"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "SWAP1"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "DUP2"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "MSTORE"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "ADD"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "KECCAK256"
										},
										{
											"begin": 468,
											"end": 488,
											"name": "SLOAD"
										},
										{
											"begin": 468,
											"end": 492,
											"name": "GT"
										},
										{
											"begin": 460,
											"end": 493,
											"name": "ISZERO"
										},
										{
											"begin": 460,
											"end": 493,
											"name": "ISZERO"
										},
										{
											"begin": 460,
											"end": 493,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 460,
											"end": 493,
											"name": "JUMPI"
										},
										{
											"begin": 460,
											"end": 493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 460,
											"end": 493,
											"name": "DUP1"
										},
										{
											"begin": 460,
											"end": 493,
											"name": "REVERT"
										},
										{
											"begin": 460,
											"end": 493,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 460,
											"end": 493,
											"name": "JUMPDEST"
										},
										{
											"begin": 518,
											"end": 526,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 537,
											"name": "CALLER"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "AND"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "AND"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "DUP2"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "MSTORE"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "ADD"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "SWAP1"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "DUP2"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "MSTORE"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "ADD"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "KECCAK256"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "SLOAD"
										},
										{
											"begin": 512,
											"end": 515,
											"name": "TIMESTAMP"
										},
										{
											"begin": 512,
											"end": 538,
											"name": "GT"
										},
										{
											"begin": 504,
											"end": 539,
											"name": "ISZERO"
										},
										{
											"begin": 504,
											"end": 539,
											"name": "ISZERO"
										},
										{
											"begin": 504,
											"end": 539,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 504,
											"end": 539,
											"name": "JUMPI"
										},
										{
											"begin": 504,
											"end": 539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 504,
											"end": 539,
											"name": "DUP1"
										},
										{
											"begin": 504,
											"end": 539,
											"name": "REVERT"
										},
										{
											"begin": 504,
											"end": 539,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 504,
											"end": 539,
											"name": "JUMPDEST"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 550,
											"end": 558,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 559,
											"end": 569,
											"name": "CALLER"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "AND"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "AND"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "DUP2"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "MSTORE"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "ADD"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "DUP2"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "MSTORE"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "ADD"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "KECCAK256"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SSTORE"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 585,
											"end": 595,
											"name": "CALLER"
										},
										{
											"begin": 585,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 605,
											"end": 609,
											"name": "ADDRESS"
										},
										{
											"begin": 605,
											"end": 617,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 605,
											"end": 617,
											"name": "AND"
										},
										{
											"begin": 605,
											"end": 617,
											"name": "BALANCE"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "SWAP1"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "DUP2"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "ISZERO"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "MUL"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "SWAP1"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "MLOAD"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "MLOAD"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "DUP1"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "DUP4"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "SUB"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "DUP2"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "DUP6"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "DUP9"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "DUP9"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "CALL"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "SWAP4"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "POP"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "POP"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "POP"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "POP"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 585,
											"end": 618,
											"name": "POP"
										},
										{
											"begin": 422,
											"end": 627,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "JUMPDEST"
										},
										{
											"begin": 396,
											"end": 404,
											"name": "DUP1"
										},
										{
											"begin": 372,
											"end": 380,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 381,
											"end": 391,
											"name": "CALLER"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "AND"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "AND"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "MSTORE"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "ADD"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "MSTORE"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "ADD"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "KECCAK256"
										},
										{
											"begin": 372,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 372,
											"end": 404,
											"name": "DUP3"
										},
										{
											"begin": 372,
											"end": 404,
											"name": "DUP3"
										},
										{
											"begin": 372,
											"end": 404,
											"name": "SLOAD"
										},
										{
											"begin": 372,
											"end": 404,
											"name": "ADD"
										},
										{
											"begin": 372,
											"end": 404,
											"name": "SWAP3"
										},
										{
											"begin": 372,
											"end": 404,
											"name": "POP"
										},
										{
											"begin": 372,
											"end": 404,
											"name": "POP"
										},
										{
											"begin": 372,
											"end": 404,
											"name": "DUP2"
										},
										{
											"begin": 372,
											"end": 404,
											"name": "SWAP1"
										},
										{
											"begin": 372,
											"end": 404,
											"name": "SSTORE"
										},
										{
											"begin": 372,
											"end": 404,
											"name": "POP"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "POP"
										},
										{
											"begin": 313,
											"end": 413,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 169,
											"end": 304,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 169,
											"end": 304,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 247,
											"name": "CALLVALUE"
										},
										{
											"begin": 214,
											"end": 222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 233,
											"name": "CALLER"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "MSTORE"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "MSTORE"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "KECCAK256"
										},
										{
											"begin": 214,
											"end": 234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 214,
											"end": 247,
											"name": "DUP3"
										},
										{
											"begin": 214,
											"end": 247,
											"name": "DUP3"
										},
										{
											"begin": 214,
											"end": 247,
											"name": "SLOAD"
										},
										{
											"begin": 214,
											"end": 247,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 247,
											"name": "SWAP3"
										},
										{
											"begin": 214,
											"end": 247,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 247,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 247,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 247,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 247,
											"name": "SSTORE"
										},
										{
											"begin": 214,
											"end": 247,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 295,
											"name": "PUSH",
											"value": "93A80"
										},
										{
											"begin": 282,
											"end": 285,
											"name": "TIMESTAMP"
										},
										{
											"begin": 282,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 258,
											"end": 266,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 267,
											"end": 277,
											"name": "CALLER"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "AND"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "AND"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "DUP2"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "MSTORE"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "ADD"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "SWAP1"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "DUP2"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "MSTORE"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "ADD"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "KECCAK256"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 258,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 258,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 258,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 258,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 258,
											"end": 295,
											"name": "SWAP3"
										},
										{
											"begin": 258,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 258,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 258,
											"end": 295,
											"name": "SSTORE"
										},
										{
											"begin": 258,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 304,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"increaseLockTime(uint256)": "79af55e4",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_seconds\",\"type\":\"uint256\"}],\"name\":\"increaseLockTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"timelock.sol\":\"TimeLock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"timelock.sol\":{\"keccak256\":\"0x7351d5b8ebbf0c4807c62d2aad3aa698e4f9ebd055b1141d7973e6bec9fdc6f5\",\"urls\":[\"bzzr://b99add8d7c18aaf05aa6ac1d567378dd6f543abbee35086977d7404951c600d9\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "timelock.sol:20:29: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        msg.sender.transfer(this.balance);\r\n                            ^----------^\n",
				"message": "Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 617,
					"file": "timelock.sol",
					"start": 605
				},
				"type": "Warning"
			}
		],
		"sources": {
			"timelock.sol": {
				"ast": {
					"absolutePath": "timelock.sol",
					"exportedSymbols": {
						"TimeLock": [
							82
						]
					},
					"id": 83,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 82,
							"linearizedBaseContracts": [
								82
							],
							"name": "TimeLock",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 82,
									"src": "83:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "92:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "83:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "103:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"name": "locktime",
									"nodeType": "VariableDeclaration",
									"scope": 82,
									"src": "125:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "134:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "125:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 7,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "145:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "203:101:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 12,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "214:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 15,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 13,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "223:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "223:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "214:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 16,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "238:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "238:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "214:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "214:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 20,
															"name": "locktime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "258:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 23,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 21,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "267:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "267:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "258:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 24,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "282:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "288:7:0",
															"subdenomination": "weeks",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "1"
														},
														"src": "282:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "258:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "258:37:0"
											}
										]
									},
									"documentation": null,
									"id": 30,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "185:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:0:0"
									},
									"scope": 82,
									"src": "169:135:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "361:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 35,
															"name": "locktime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "372:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 38,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 36,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "381:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "372:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 39,
														"name": "_seconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "396:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "372:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "372:32:0"
											}
										]
									},
									"documentation": null,
									"id": 43,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "increaseLockTime",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "_seconds",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "339:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "339:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "338:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:0:0"
									},
									"scope": 82,
									"src": "313:100:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "449:178:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 47,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "468:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 50,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 48,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "477:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "477:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "468:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "491:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "468:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 46,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															100,
															101
														],
														"referencedDeclaration": 100,
														"src": "460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "460:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "460:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 56,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "512:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 57,
																	"name": "locktime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "518:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 60,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 58,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "527:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "527:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "518:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "512:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															100,
															101
														],
														"referencedDeclaration": 100,
														"src": "504:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "504:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "504:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 64,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "550:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 67,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 65,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "559:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "559:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "550:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "573:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "550:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "550:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 76,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "605:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TimeLock_$82",
																	"typeString": "contract TimeLock"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "605:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 71,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "585:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "585:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "585:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "585:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "585:33:0"
											}
										]
									},
									"documentation": null,
									"id": 81,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "449:0:0"
									},
									"scope": 82,
									"src": "422:205:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 83,
							"src": "58:572:0"
						}
					],
					"src": "33:597:0"
				},
				"id": 0
			}
		}
	}
}